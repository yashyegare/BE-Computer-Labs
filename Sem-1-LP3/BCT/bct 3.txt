// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Bank {
    mapping (address => uint) public balances;

   function deposit(uint withdrawAmount) public payable {
        balances[msg.sender] += withdrawAmount;
    } 

    
    function withdraw(uint withdrawAmount) public {
        // Check enough balance available, otherwise just return balance
        require(balances[msg.sender] >= withdrawAmount,"Not enough ether");
        balances[msg.sender] -= withdrawAmount;
    }

    /// @notice Just reads balance of the account requesting, so "constant"
    /// @return The balance of the user
    function balance() public view returns (uint) {
        return balances[msg.sender];
    }
    
}

 


 
